#############################################################################
# Makefile for building: UNNID
# Generated by qmake (1.04a) (Qt 3.1.1) on: Sun Jan 11 15:33:33 2004
# Project:  UNNID.pro
# Template: app
# Command: $(QMAKE) -o Makefile UNNID.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -march=i386 -mcpu=i686 -g -DGLX_GLXEXT_LEGACY -fno-use-cxa-atexit -fno-exceptions  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -march=i386 -mcpu=i686 -g -DGLX_GLXEXT_LEGACY -fno-use-cxa-atexit -fno-exceptions  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I$(QTDIR)/mkspecs/default -I. -I$(QTDIR)/include -I.ui/ -I.moc/
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpcap
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = ManagementControl.h \
		NeuralNet.h \
		PreProcessor.h \
		IdsEvaluator.h \
		AttackTypes.h \
		Responder.h \
		TcpDumpPacketProvider.h \
		TrainTestDataProvider.h
SOURCES = ManagementControl.cpp \
		main.cpp \
		NeuralNet.cpp \
		PreProcessor.cpp \
		IdsEvaluator.cpp \
		Responder.cpp \
		TcpDumpPacketProvider.cpp \
		TrainTestDataProvider.cpp
OBJECTS = .obj/ManagementControl.o \
		.obj/main.o \
		.obj/NeuralNet.o \
		.obj/PreProcessor.o \
		.obj/IdsEvaluator.o \
		.obj/Responder.o \
		.obj/TcpDumpPacketProvider.o \
		.obj/TrainTestDataProvider.o \
		.obj/frmPreProcessorSetting.o \
		.obj/frmNeuralNetSetting.o \
		.obj/frmMain.o \
		.obj/frmDataProvidersSetting.o \
		.obj/frmProgressWindow.o \
		.obj/frmIdsEvaluator.o \
		.obj/frmResponderSetting.o \
		.obj/frmCapturePacketsSetting.o \
		.obj/qmake_image_collection.o
FORMS = frmPreProcessorSetting.ui \
		frmNeuralNetSetting.ui \
		frmMain.ui \
		frmDataProvidersSetting.ui \
		frmProgressWindow.ui \
		frmIdsEvaluator.ui \
		frmResponderSetting.ui \
		frmCapturePacketsSetting.ui
UICDECLS = .ui/frmPreProcessorSetting.h \
		.ui/frmNeuralNetSetting.h \
		.ui/frmMain.h \
		.ui/frmDataProvidersSetting.h \
		.ui/frmProgressWindow.h \
		.ui/frmIdsEvaluator.h \
		.ui/frmResponderSetting.h \
		.ui/frmCapturePacketsSetting.h
UICIMPLS = .ui/frmPreProcessorSetting.cpp \
		.ui/frmNeuralNetSetting.cpp \
		.ui/frmMain.cpp \
		.ui/frmDataProvidersSetting.cpp \
		.ui/frmProgressWindow.cpp \
		.ui/frmIdsEvaluator.cpp \
		.ui/frmResponderSetting.cpp \
		.ui/frmCapturePacketsSetting.cpp
SRCMOC   = .moc/moc_frmPreProcessorSetting.cpp \
		.moc/moc_frmNeuralNetSetting.cpp \
		.moc/moc_frmMain.cpp \
		.moc/moc_frmDataProvidersSetting.cpp \
		.moc/moc_frmProgressWindow.cpp \
		.moc/moc_frmIdsEvaluator.cpp \
		.moc/moc_frmResponderSetting.cpp \
		.moc/moc_frmCapturePacketsSetting.cpp
OBJMOC = .obj/moc_frmPreProcessorSetting.o \
		.obj/moc_frmNeuralNetSetting.o \
		.obj/moc_frmMain.o \
		.obj/moc_frmDataProvidersSetting.o \
		.obj/moc_frmProgressWindow.o \
		.obj/moc_frmIdsEvaluator.o \
		.obj/moc_frmResponderSetting.o \
		.obj/moc_frmCapturePacketsSetting.o
DIST	   = UNNID.pro
QMAKE_TARGET = UNNID
DESTDIR  = 
TARGET   = UNNID

first: all
####### Implicit rules

.SUFFIXES: .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: UNNID.pro  $(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile UNNID.pro
qmake: 
	@$(QMAKE) -o Makefile UNNID.pro

dist: 
	@mkdir -p .obj/UNNID && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/UNNID/ && $(COPY_FILE) --parents frmPreProcessorSetting.ui.h frmNeuralNetSetting.ui.h frmMain.ui.h frmDataProvidersSetting.ui.h frmProgressWindow.ui.h frmIdsEvaluator.ui.h frmResponderSetting.ui.h frmCapturePacketsSetting.ui.h .obj/UNNID/ && ( cd `dirname .obj/UNNID` && $(TAR) UNNID.tar UNNID && $(GZIP) UNNID.tar ) && $(MOVE) `dirname .obj/UNNID`/UNNID.tar.gz . && $(DEL_FILE) -r .obj/UNNID

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS) 
		-$(DEL_FILE) .ui/qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/ManagementControl.o: ManagementControl.cpp ManagementControl.h \
		TcpDumpPacketProvider.h \
		TrainTestDataProvider.h \
		PreProcessor.h \
		NeuralNet.h \
		Responder.h \
		IdsEvaluator.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/ManagementControl.o ManagementControl.cpp

.obj/main.o: main.cpp .ui/frmMain.h \
		ManagementControl.h \
		TcpDumpPacketProvider.h \
		TrainTestDataProvider.h \
		PreProcessor.h \
		NeuralNet.h \
		Responder.h \
		IdsEvaluator.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/main.o main.cpp

.obj/NeuralNet.o: NeuralNet.cpp NeuralNet.h \
		TrainTestDataProvider.h \
		PreProcessor.h \
		Responder.h \
		AttackTypes.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/NeuralNet.o NeuralNet.cpp

.obj/PreProcessor.o: PreProcessor.cpp PreProcessor.h \
		TcpDumpPacketProvider.h \
		TrainTestDataProvider.h \
		NeuralNet.h \
		AttackTypes.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/PreProcessor.o PreProcessor.cpp

.obj/IdsEvaluator.o: IdsEvaluator.cpp IdsEvaluator.h \
		PreProcessor.h \
		NeuralNet.h \
		AttackTypes.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/IdsEvaluator.o IdsEvaluator.cpp

.obj/Responder.o: Responder.cpp Responder.h \
		AttackTypes.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/Responder.o Responder.cpp

.obj/TcpDumpPacketProvider.o: TcpDumpPacketProvider.cpp TcpDumpPacketProvider.h \
		PreProcessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/TcpDumpPacketProvider.o TcpDumpPacketProvider.cpp

.obj/TrainTestDataProvider.o: TrainTestDataProvider.cpp TrainTestDataProvider.h \
		TcpDumpPacketProvider.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/TrainTestDataProvider.o TrainTestDataProvider.cpp

.ui/frmPreProcessorSetting.h: frmPreProcessorSetting.ui 
	$(UIC) frmPreProcessorSetting.ui -o .ui/frmPreProcessorSetting.h

.ui/frmPreProcessorSetting.cpp: .ui/frmPreProcessorSetting.h frmPreProcessorSetting.ui 
	$(UIC) frmPreProcessorSetting.ui -i frmPreProcessorSetting.h -o .ui/frmPreProcessorSetting.cpp

.ui/frmNeuralNetSetting.h: frmNeuralNetSetting.ui 
	$(UIC) frmNeuralNetSetting.ui -o .ui/frmNeuralNetSetting.h

.ui/frmNeuralNetSetting.cpp: .ui/frmNeuralNetSetting.h frmNeuralNetSetting.ui 
	$(UIC) frmNeuralNetSetting.ui -i frmNeuralNetSetting.h -o .ui/frmNeuralNetSetting.cpp

.ui/frmMain.h: frmMain.ui 
	$(UIC) frmMain.ui -o .ui/frmMain.h

.ui/frmMain.cpp: .ui/frmMain.h frmMain.ui 
	$(UIC) frmMain.ui -i frmMain.h -o .ui/frmMain.cpp

.ui/frmDataProvidersSetting.h: frmDataProvidersSetting.ui 
	$(UIC) frmDataProvidersSetting.ui -o .ui/frmDataProvidersSetting.h

.ui/frmDataProvidersSetting.cpp: .ui/frmDataProvidersSetting.h frmDataProvidersSetting.ui 
	$(UIC) frmDataProvidersSetting.ui -i frmDataProvidersSetting.h -o .ui/frmDataProvidersSetting.cpp

.ui/frmProgressWindow.h: frmProgressWindow.ui 
	$(UIC) frmProgressWindow.ui -o .ui/frmProgressWindow.h

.ui/frmProgressWindow.cpp: .ui/frmProgressWindow.h frmProgressWindow.ui 
	$(UIC) frmProgressWindow.ui -i frmProgressWindow.h -o .ui/frmProgressWindow.cpp

.ui/frmIdsEvaluator.h: frmIdsEvaluator.ui 
	$(UIC) frmIdsEvaluator.ui -o .ui/frmIdsEvaluator.h

.ui/frmIdsEvaluator.cpp: .ui/frmIdsEvaluator.h frmIdsEvaluator.ui 
	$(UIC) frmIdsEvaluator.ui -i frmIdsEvaluator.h -o .ui/frmIdsEvaluator.cpp

.ui/frmResponderSetting.h: frmResponderSetting.ui 
	$(UIC) frmResponderSetting.ui -o .ui/frmResponderSetting.h

.ui/frmResponderSetting.cpp: .ui/frmResponderSetting.h frmResponderSetting.ui 
	$(UIC) frmResponderSetting.ui -i frmResponderSetting.h -o .ui/frmResponderSetting.cpp

.ui/frmCapturePacketsSetting.h: frmCapturePacketsSetting.ui 
	$(UIC) frmCapturePacketsSetting.ui -o .ui/frmCapturePacketsSetting.h

.ui/frmCapturePacketsSetting.cpp: .ui/frmCapturePacketsSetting.h frmCapturePacketsSetting.ui 
	$(UIC) frmCapturePacketsSetting.ui -i frmCapturePacketsSetting.h -o .ui/frmCapturePacketsSetting.cpp

.obj/frmPreProcessorSetting.o: .ui/frmPreProcessorSetting.cpp frmPreProcessorSetting.ui.h \
		.ui/frmPreProcessorSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmPreProcessorSetting.o .ui/frmPreProcessorSetting.cpp

.obj/frmNeuralNetSetting.o: .ui/frmNeuralNetSetting.cpp frmNeuralNetSetting.ui.h \
		.ui/frmNeuralNetSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmNeuralNetSetting.o .ui/frmNeuralNetSetting.cpp

.obj/frmMain.o: .ui/frmMain.cpp frmMain.ui.h \
		.ui/frmMain.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmMain.o .ui/frmMain.cpp

.obj/frmDataProvidersSetting.o: .ui/frmDataProvidersSetting.cpp frmDataProvidersSetting.ui.h \
		.ui/frmDataProvidersSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmDataProvidersSetting.o .ui/frmDataProvidersSetting.cpp

.obj/frmProgressWindow.o: .ui/frmProgressWindow.cpp frmProgressWindow.ui.h \
		.ui/frmProgressWindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmProgressWindow.o .ui/frmProgressWindow.cpp

.obj/frmIdsEvaluator.o: .ui/frmIdsEvaluator.cpp frmIdsEvaluator.ui.h \
		.ui/frmIdsEvaluator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmIdsEvaluator.o .ui/frmIdsEvaluator.cpp

.obj/frmResponderSetting.o: .ui/frmResponderSetting.cpp frmResponderSetting.ui.h \
		.ui/frmResponderSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmResponderSetting.o .ui/frmResponderSetting.cpp

.obj/frmCapturePacketsSetting.o: .ui/frmCapturePacketsSetting.cpp frmCapturePacketsSetting.ui.h \
		.ui/frmCapturePacketsSetting.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/frmCapturePacketsSetting.o .ui/frmCapturePacketsSetting.cpp

.obj/moc_frmPreProcessorSetting.o: .moc/moc_frmPreProcessorSetting.cpp .ui/frmPreProcessorSetting.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmPreProcessorSetting.o .moc/moc_frmPreProcessorSetting.cpp

.obj/moc_frmNeuralNetSetting.o: .moc/moc_frmNeuralNetSetting.cpp .ui/frmNeuralNetSetting.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmNeuralNetSetting.o .moc/moc_frmNeuralNetSetting.cpp

.obj/moc_frmMain.o: .moc/moc_frmMain.cpp .ui/frmMain.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmMain.o .moc/moc_frmMain.cpp

.obj/moc_frmDataProvidersSetting.o: .moc/moc_frmDataProvidersSetting.cpp .ui/frmDataProvidersSetting.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmDataProvidersSetting.o .moc/moc_frmDataProvidersSetting.cpp

.obj/moc_frmProgressWindow.o: .moc/moc_frmProgressWindow.cpp .ui/frmProgressWindow.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmProgressWindow.o .moc/moc_frmProgressWindow.cpp

.obj/moc_frmIdsEvaluator.o: .moc/moc_frmIdsEvaluator.cpp .ui/frmIdsEvaluator.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmIdsEvaluator.o .moc/moc_frmIdsEvaluator.cpp

.obj/moc_frmResponderSetting.o: .moc/moc_frmResponderSetting.cpp .ui/frmResponderSetting.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmResponderSetting.o .moc/moc_frmResponderSetting.cpp

.obj/moc_frmCapturePacketsSetting.o: .moc/moc_frmCapturePacketsSetting.cpp .ui/frmCapturePacketsSetting.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_frmCapturePacketsSetting.o .moc/moc_frmCapturePacketsSetting.cpp

.moc/moc_frmPreProcessorSetting.cpp: $(MOC) .ui/frmPreProcessorSetting.h
	$(MOC) .ui/frmPreProcessorSetting.h -o .moc/moc_frmPreProcessorSetting.cpp

.moc/moc_frmNeuralNetSetting.cpp: $(MOC) .ui/frmNeuralNetSetting.h
	$(MOC) .ui/frmNeuralNetSetting.h -o .moc/moc_frmNeuralNetSetting.cpp

.moc/moc_frmMain.cpp: $(MOC) .ui/frmMain.h
	$(MOC) .ui/frmMain.h -o .moc/moc_frmMain.cpp

.moc/moc_frmDataProvidersSetting.cpp: $(MOC) .ui/frmDataProvidersSetting.h
	$(MOC) .ui/frmDataProvidersSetting.h -o .moc/moc_frmDataProvidersSetting.cpp

.moc/moc_frmProgressWindow.cpp: $(MOC) .ui/frmProgressWindow.h
	$(MOC) .ui/frmProgressWindow.h -o .moc/moc_frmProgressWindow.cpp

.moc/moc_frmIdsEvaluator.cpp: $(MOC) .ui/frmIdsEvaluator.h
	$(MOC) .ui/frmIdsEvaluator.h -o .moc/moc_frmIdsEvaluator.cpp

.moc/moc_frmResponderSetting.cpp: $(MOC) .ui/frmResponderSetting.h
	$(MOC) .ui/frmResponderSetting.h -o .moc/moc_frmResponderSetting.cpp

.moc/moc_frmCapturePacketsSetting.cpp: $(MOC) .ui/frmCapturePacketsSetting.h
	$(MOC) .ui/frmCapturePacketsSetting.h -o .moc/moc_frmCapturePacketsSetting.cpp

.obj/qmake_image_collection.o: .ui/qmake_image_collection.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/qmake_image_collection.o .ui/qmake_image_collection.cpp

.ui/qmake_image_collection.cpp: images/Contents.png \
		images/DataProviderSetting.png \
		images/EvaluateNet.png \
		images/Exit.png \
		images/FileNew.png \
		images/FileOpen.png \
		images/FileSaveAs.png \
		images/Help.png \
		images/NeuralNetSetting.png \
		images/PreProcessorSetting.png \
		images/Print.png \
		images/ResponderSetting.png \
		images/StartOffLine.png \
		images/StartOnLine.png \
		images/StopOnLine.png \
		images/TestNet.png \
		images/TrainNet.png \
		images/UNNID.png \
		images/FileSave.png \
		images/FileOpen_Small.png
	$(UIC)  -embed UNNID images/Contents.png images/DataProviderSetting.png images/EvaluateNet.png images/Exit.png images/FileNew.png images/FileOpen.png images/FileSaveAs.png images/Help.png images/NeuralNetSetting.png images/PreProcessorSetting.png images/Print.png images/ResponderSetting.png images/StartOffLine.png images/StartOnLine.png images/StopOnLine.png images/TestNet.png images/TrainNet.png images/UNNID.png images/FileSave.png images/FileOpen_Small.png -o .ui/qmake_image_collection.cpp

####### Install

install: all 

uninstall: 

